// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios18.2-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name SDK
import Foundation
@_exported import SDK
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor @preconcurrency public class LynxViewController : UIKit.UIViewController {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@_Concurrency.MainActor @preconcurrency public struct LynxViewRepresentable : SwiftUI.UIViewControllerRepresentable {
  public typealias UIViewControllerType = SDK.LynxViewController
  @_Concurrency.MainActor @preconcurrency public init()
  @_Concurrency.MainActor @preconcurrency public func makeUIViewController(context: SDK.LynxViewRepresentable.Context) -> SDK.LynxViewController
  @_Concurrency.MainActor @preconcurrency public func updateUIViewController(_ uiViewController: SDK.LynxViewController, context: SDK.LynxViewRepresentable.Context)
  public typealias Body = Swift.Never
  public typealias Coordinator = Swift.Void
}
@_Concurrency.MainActor @preconcurrency public struct SDKView : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init()
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s3SDK7SDKViewV4bodyQrvp", 0) __
}
extension SDK.LynxViewRepresentable : Swift.Sendable {}
extension SDK.SDKView : Swift.Sendable {}
